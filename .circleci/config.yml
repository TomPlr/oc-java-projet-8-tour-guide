version: 2.1

# Define reusable commands for installing dependencies.
commands:
  install_dependencies:
    steps:
      # Installs the gpsUtil dependency.
      - run:
          name: Install gpsUtil Dependency
          command: mvn install:install-file -Dfile=./libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
      # Installs the RewardCentral dependency.
      - run:
          name: Install RewardCentral Dependency
          command: mvn install:install-file -Dfile=./libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
      # Installs the TripPricer dependency.
      - run:
          name: Install TripPricer Dependency
          command: mvn install:install-file -Dfile=./libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar

# Jobs define the individual tasks that will be run as part of the workflow.
jobs:
  build:
    # Specifies the Docker image to use for the job.
    docker:
      - image: cimg/openjdk:17.0

    # Steps define the commands that will be run in the job.
    steps:
      # Checks out the repository code.
      - checkout
      # Installs dependencies using the reusable command.
      - install_dependencies
      # Runs the Maven clean and package goals to build the project.
      - run:
          name: Build Project
          command: mvn clean install

  test:
    # Specifies the Docker image to use for the job.
    docker:
      - image: cimg/openjdk:17.0

    # Steps define the commands that will be run in the job.
    steps:
      # Checks out the repository code.
      - checkout
      # Installs dependencies using the reusable command.
      - install_dependencies
      # Runs the Maven test goal to execute the tests.
      - run:
          name: Run Tests
          command: mvn test

  quality:
    # Specifies the Docker image to use for the job.
    docker:
      - image: cimg/openjdk:17.0

    # Steps define the commands that will be run in the job.
    steps:
      # Checks out the repository code.
      - checkout
      # Installs dependencies using the reusable command.
      - install_dependencies
      # Runs static code analysis or other quality checks.
      - run:
          name: Run Quality Checks
          command: mvn checkstyle:check

  package:
    # Specifies the Docker image to use for the job.
    docker:
      - image: cimg/openjdk:17.0

    # Steps define the commands that will be run in the job.
    steps:
      # Checks out the repository code.
      - checkout
      # Installs dependencies using the reusable command.
      - install_dependencies
      # Packages the application.
      - run:
          name: Package Application
          command: mvn package

      # Stores the artifact generated by mvn package.
      - store_artifacts:
          path: target/tourguide-0.0.1-SNAPSHOT.jar
          destination: tourguide-0.0.1-SNAPSHOT.jar

# Workflows define the order in which jobs are run.
workflows:
  version: 2
  build_and_test:
    jobs:
      # Runs the build job.
      - build
      # Runs the quality job in parallel with the build job.
      - quality:
          filters:
            branches:
              only:
                - main
      # Runs the test job, but only after the build job has completed successfully.
      - test:
          requires:
            - build
      # Runs the package job, but only after the test job has completed successfully.
      - package:
          requires:
            - test
